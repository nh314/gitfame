{"version":3,"sources":["components/Input/index.js","actions/index.js","components/GitRepo/style.js","components/GitRepo/index.js","containers/Results.js","containers/SelectedRepoList.js","services/github.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["MyInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","props","onSubmit","state","keyword","_this2","react_default","a","createElement","Form","Field","Input","onChange","_ref","name","value","setState","defineProperty","action","color","icon","placeholder","autoFocus","autoComplete","Component","actionTypes","Actions","addResult","repo","type","removeResult","setFoundRepos","foundRepos","setLoadingState","onLoading","styles","gitStats","display","width","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","GitRepoListItem","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","onClick","then","toast","success","err","warn","inherits","createClass","key","List","Item","Image","avatar","src","owner","avatar_url","window","open","html_url","className","Content","Header","full_name","Description","style","Icon","Intl","NumberFormat","format","stargazers_count","forks_count","floated","Button","as","href","target","title","GitRepoTableRow","Table","Row","Cell","rel","removeItem","default","minHeight","hasRepo","padding","Result","v","Promise","resolve","reject","selectedRepos","findIndex","id","repoStateAction","renderList","map","k","GitRepo_GitRepoListItem","render","onLoad","Segment","loading","padded","divided","relaxed","selection","verticalAlign","connect","repoReducers","dispatch","bindActionCreators","forwardRef","SelectedRepoList","direction","column","_this$state","sort","b","GitRepo_GitRepoTableRow","handleSort","clickedColumn","_this$state2","_this$state3","sortable","celled","fixed","unstackable","HeaderCell","sorted","Body","_callee","data","apiURL","_ref2","regenerator_default","wrap","_context","prev","next","encodeURIComponent","to","fetch","method","response","json","responseJson","items","sent","slicedToArray","console","log","abrupt","defaultData","stop","repoInitialState","combineReducers","undefined","actions","assign","toConsumableArray","filter","App","searchRepos","debounce","onRepoLoading","_x","_searchRepos","resultList","current","React","createRef","Container","Grid","container","centered","columns","Column","mobile","tablet","computer","Input_MyInput","Results","ref","containers_SelectedRepoList","lib","store","createStore","rootReducer","Boolean","location","hostname","match","ReactDOM","es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1f6ae8e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Form } from \"semantic-ui-react\";\n\ntype Props = {\n  onSubmit?: (term?: string) => void\n};\n\nexport default class MyInput extends Component<Props> {\n  textInput: any;\n\n  constructor() {\n    super();\n    this.state = {\n      keyword: null\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.props.onSubmit && this.state.keyword) {\n      this.props.onSubmit(this.state.keyword);\n    }\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Field>\n          <Form.Input\n            onChange={(e, { name, value }) => this.setState({ [name]: value })}\n            action={{ color: \"teal\", icon: \"search\" }}\n            placeholder=\"Search...\"\n            autoFocus={true}\n            name=\"keyword\"\n            autoComplete=\"off\"\n          />\n        </Form.Field>\n      </Form>\n    );\n  }\n}\n","// @flow\n\nexport const actionTypes = {\n  ADD_RESULT: \"ADD_RESULT\",\n  REMOVE_RESULT: \"REMOVE_RESULT\",\n  SET_FOUND_REPOS: \"SET_FOUND_REPOS\",\n  ON_LOADING_REPO: \"ON_LOADING_REPO\"\n};\n\ntype ADD_RESULT = { type: \"ADD_RESULT\", repo: Object };\ntype REMOVE_RESULT = { type: \"REMOVE_RESULT\", repo: Object };\ntype SET_FOUND_REPOS = { type: \"SET_FOUND_REPOS\", foundRepos: Array<Object> };\ntype ON_LOADING_REPO = { type: \"ON_LOADING_REPO\", onLoading: Boolean };\n\nexport const addResult = (repo: Object): ADD_RESULT => {\n  return { type: actionTypes.ADD_RESULT, repo };\n};\nexport const removeResult = (repo: Object): REMOVE_RESULT => {\n  return { type: actionTypes.REMOVE_RESULT, repo };\n};\n\nexport const setFoundRepos = (foundRepos: Array<Object>): SET_FOUND_REPOS => {\n  return { type: actionTypes.SET_FOUND_REPOS, foundRepos };\n};\n\nexport const setLoadingState = (onLoading: Boolean): ON_LOADING_REPO => {\n  return { type: actionTypes.ON_LOADING_REPO, onLoading };\n};\n\nexport const Actions = {\n  addResult,\n  removeResult,\n  setFoundRepos,\n  setLoadingState\n};\n","const styles = {\n  gitStats: {\n    display: \"inline-block\",\n    width: \"100px\"\n  }\n};\n\nexport default styles;\n","// @flow\nimport React, { Component } from \"react\";\nimport { List, Image, Icon, Button, Table } from \"semantic-ui-react\";\nimport { toast } from \"react-toastify\";\n\nimport styles from \"./style.js\";\nimport \"./style.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntype Props = {\n  repo: Object,\n  onClick?: () => Promise<String>,\n  removeItem?: Function\n};\n\nconst toastConfig = {\n  position: \"top-right\",\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true\n};\nexport class GitRepoListItem extends Component<Props> {\n  onClick = () => {\n    if (this.props.onClick) {\n      this.props\n        .onClick()\n        .then(\n          value => toast.success(value, toastConfig),\n          err => toast.warn(err, toastConfig)\n        );\n    }\n  };\n\n  render() {\n    return (\n      <List.Item>\n        <Image\n          avatar\n          src={this.props.repo.owner.avatar_url}\n          onClick={() => {\n            window.open(this.props.repo.owner.html_url, \"_blank\");\n          }}\n          className=\"no-trigger-main-event\"\n        />\n        <List.Content onClick={this.onClick}>\n          <List.Header>{this.props.repo.full_name}</List.Header>\n          <List.Description>\n            <div style={styles.gitStats}>\n              <Icon name=\"star\" />\n              {new Intl.NumberFormat().format(this.props.repo.stargazers_count)}\n            </div>\n            <div style={styles.gitStats}>\n              <Icon name=\"fork\" />\n              {this.props.repo.forks_count}\n            </div>\n          </List.Description>\n        </List.Content>\n        <List.Content floated=\"right\">\n          <Button\n            icon\n            as=\"a\"\n            href={this.props.repo.html_url}\n            target=\"_blank\"\n            title=\"Open repo in a new tab\"\n            className=\"no-trigger-main-event\"\n          >\n            <Icon name=\"share square\" />\n          </Button>\n        </List.Content>\n      </List.Item>\n    );\n  }\n}\n\nexport const GitRepoTableRow = (props: Props) => {\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <a href={props.repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {props.repo.full_name}\n        </a>\n      </Table.Cell>\n      <Table.Cell>\n        {new Intl.NumberFormat().format(props.repo.stargazers_count)}\n      </Table.Cell>\n      <Table.Cell>\n        {new Intl.NumberFormat().format(props.repo.forks_count)}\n      </Table.Cell>\n      <Table.Cell>\n        <Button onClick={props.removeItem}>Remove</Button>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Actions } from \"../actions\";\nimport { GitRepoListItem } from \"../components/GitRepo\";\nimport { List, Segment } from \"semantic-ui-react\";\n\nconst mapStateToProps = state => ({\n  foundRepos: state.repoReducers.foundRepos,\n  selectedRepos: state.repoReducers.selectedRepos,\n  setLoadingState: state.repoReducers.setLoadingState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  repoStateAction: bindActionCreators(Actions, dispatch)\n});\n\ntype Props = {\n  foundRepos: Array<Object>,\n  selectedRepos: Array<Object>,\n  onLoading: Boolean\n};\n\nconst styles = {\n  default: {\n    minHeight: 60\n  },\n  hasRepo: {\n    padding: 0\n  }\n};\n\nclass Result extends Component<Props> {\n  constructor() {\n    super();\n    this.state = {\n      loading: false\n    };\n  }\n\n  addResult = v => {\n    const p = new Promise((resolve, reject) => {\n      if (this.props.selectedRepos.findIndex(repo => v.id === repo.id) < 0) {\n        this.props.repoStateAction.addResult(v);\n        resolve(v.full_name + \" added successfully\");\n      } else {\n        reject(v.full_name + \" is exists in selected list\");\n      }\n    });\n\n    return p;\n  };\n\n  renderList = () => {\n    return this.props.foundRepos.map((v, k) => (\n      <GitRepoListItem\n        key={v.id}\n        onClick={() => {\n          return this.addResult(v);\n        }}\n        repo={v}\n      />\n    ));\n  };\n\n  render = () => {\n    const onLoad = this.props.onLoading;\n    const display = this.props.foundRepos.length > 0 || onLoad;\n    const style =\n      (this.props.foundRepos.length > 0 && styles.hasRepo) || styles.default;\n    return (\n      display && (\n        <Segment style={style} loading={onLoad} padded>\n          <List divided relaxed selection verticalAlign=\"middle\">\n            {this.renderList()}\n          </List>\n        </Segment>\n      )\n    );\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(Result);\n","//@flow\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Actions } from \"../actions\";\nimport { GitRepoTableRow } from \"../components/GitRepo\";\nimport { Table } from \"semantic-ui-react\";\n\nconst mapStateToProps = state => ({\n  selectedRepos: state.repoReducers.selectedRepos\n});\n\nconst mapDispatchToProps = dispatch => ({\n  repoStateAction: bindActionCreators(Actions, dispatch)\n});\n\ntype RepoStateAction = {\n  removeResult: Function\n};\n\ntype Props = {\n  selectedRepos: Array<Object>,\n  repoStateAction: RepoStateAction,\n  handleSort: () => void\n};\ntype State = { direction: string | null, column: string | null };\n\nclass SelectedRepoList extends Component<Props, State> {\n  state = {\n    direction: null,\n    column: null\n  };\n\n  renderList = () => {\n    const { column, direction } = this.state;\n    this.props.selectedRepos.sort((a, b) => {\n      if (direction === \"ascending\") {\n        return a[column] - b[column];\n      }\n      return b[column] - a[column];\n    });\n\n    return this.props.selectedRepos.map((v, k) => (\n      <GitRepoTableRow key={k} repo={v} removeItem={this.removeItem(v)} />\n    ));\n  };\n\n  handleSort = (clickedColumn: string) => () => {\n    const { column, direction } = this.state;\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        direction: \"descending\"\n      });\n      return;\n    }\n    this.setState({\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  removeItem = repo => () => {\n    this.props.repoStateAction.removeResult(repo);\n  };\n\n  render() {\n    const { column, direction } = this.state;\n    return (\n      <Table sortable celled fixed unstackable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === \"stargazers_count\" ? direction : null}\n              onClick={this.handleSort(\"stargazers_count\")}\n            >\n              Stars\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === \"forks_count\" ? direction : null}\n              onClick={this.handleSort(\"forks_count\")}\n            >\n              Forks\n            </Table.HeaderCell>\n            <Table.HeaderCell />\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>{this.renderList()}</Table.Body>\n      </Table>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(SelectedRepoList);\n","// @flow\nimport to from \"await-to-js\";\n\nimport defaultData from \"../data.json\";\n\nexport async function searchRepos(key: string) {\n  let err, data;\n  // const apiURL = \"http://1.2.3.4\" + key;\n  const apiURL =\n    \"https://api.github.com/search/repositories?per_page=10&q=\" +\n    encodeURIComponent(key);\n  [err, data] = await to(\n    fetch(apiURL, {\n      method: \"GET\"\n    })\n      .then(response => response.json())\n      .then(responseJson => {\n        if (responseJson.items) {\n          return responseJson.items;\n        }\n        throw responseJson;\n      })\n  );\n  if (err) {\n    console.log(err);\n    return defaultData;\n  }\n\n  return data;\n}\n","import { combineReducers } from \"redux\";\nimport * as actions from \"../actions\";\n\n//Default action for all reducers\ntype Action = {\n  type: string,\n  text?: string,\n  repo?: Object,\n  foundRepos?: Array<Object>,\n  selectedRepos?: Array<Object>,\n  onLoading?: Boolean\n};\n\nconst repoInitialState = {\n  foundRepos: [],\n  selectedRepos: [],\n  onLoading: false\n};\nconst repoReducers = (state = repoInitialState, action: Action) => {\n  switch (action.type) {\n    case actions.actionTypes.SET_FOUND_REPOS:\n      return Object.assign({}, state, {\n        foundRepos: action.foundRepos\n      });\n\n    case actions.actionTypes.ADD_RESULT:\n      return Object.assign({}, state, {\n        selectedRepos: [...state.selectedRepos, action.repo]\n      });\n\n    case actions.actionTypes.REMOVE_RESULT:\n      return Object.assign({}, state, {\n        selectedRepos: state.selectedRepos.filter(v => {\n          return v.id !== action.repo.id;\n        })\n      });\n\n    case actions.actionTypes.ON_LOADING_REPO:\n      return Object.assign({}, state, {\n        onLoading: action.onLoading\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  repoReducers\n});\n","import React, { Component } from \"react\";\nimport MyInput from \"./components/Input\";\nimport Results from \"./containers/Results\";\nimport SelectedRepoList from \"./containers/SelectedRepoList\";\nimport { searchRepos } from \"./services/github\";\nimport { debounce } from \"debounce\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers\";\nimport { Container, Grid } from \"semantic-ui-react\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\ntype Props = {};\nclass App extends Component<Props> {\n  resultList: any;\n\n  constructor() {\n    super();\n    this.resultList = React.createRef();\n    this.state = {\n      onRepoLoading: false\n    };\n  }\n\n  searchRepos = debounce(keyword => {\n    if (keyword.length < 1) {\n      return;\n    }\n    this.setState({ onRepoLoading: true });\n    searchRepos(keyword).then(foundRepos => {\n      this.setState({ onRepoLoading: false });\n      foundRepos.length > 0 &&\n        this.resultList.current.props.repoStateAction.setFoundRepos(foundRepos);\n    });\n  }, 600);\n\n  render() {\n    return (\n      <Container>\n        <Grid container>\n          <Grid.Row centered columns={16}>\n            <Grid.Column mobile={16} tablet={12} computer={8}>\n              <MyInput onSubmit={this.searchRepos} />\n              <Results\n                ref={this.resultList}\n                onLoading={this.state.onRepoLoading}\n              />\n              <SelectedRepoList />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <ToastContainer />\n      </Container>\n    );\n  }\n}\n\nconst store = createStore(rootReducer);\nexport default () => {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n   <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}