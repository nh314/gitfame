{"version":3,"sources":["components/Input/index.tsx","components/GitRepo/CompareListFilter.tsx","components/GitRepo/Repo.tsx","components/GitRepo/SearchResultList.tsx","components/GitRepo/CompareList.tsx","services/github.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["onSubmit","event","preventDefault","term","_this","props","iconClass","this","isLoading","react_default","a","createElement","className","ref","formRef","value","onChange","onTermChange","type","Component","supportedOrderProp","stargazers_count","forks_count","watchers","open_issues","CompareListFilter","onSortPropertyChange","Object","keys","map","k","i","key","onSortOrderChange","Repo","renderForSearchResulList","onClick","e","repo","full_name","renderForCompareList","defaultStats","additionalProperty","includes","push","href","html_url","target","propertyName","index","toLocaleString","onRemoveButtonClick","context","SearchResultList","onRepoClick","_this2","repos","Repo_Repo","id","length","prevHandler","nextHandler","CompareList","_this$props","sortBy","order","sortedRepos","sort","b","onRemoveButton","then","removeRepoCallBack","defaultProps","ReponseError","_Error","message","httpStatus","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","wrapNativeSuper","Error","_callee","page","record_per_page","apiURL","response","responseJson","_args","arguments","regenerator_default","wrap","_context","prev","next","undefined","concat","encodeURIComponent","fetch","method","sent","json","ok","abrupt","items","status","stop","searchCache","App","state","sortProperty","sortOrder","selectedRepos","errorMessage","React","createRef","searchRepo","currentPage","setState","searchResult","_x","_searchRepos","apply","GitHub","toString","catch","console","log","finally","navigationNext","form","current","dispatchEvent","Event","navigationPrev","prevPag","selectRepo","filter","element","toConsumableArray","setSortProperty","currentTarget","newState","setSortOrder","parseInt","removeRepoInComapreList","removedRepos","splice","Promise","resolve","appErrorMessage","components_Input_default","SearchResultList_SearchResultList","CompareList_CompareList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.699a7b4e.chunk.js","sourcesContent":["import React, { Component, SyntheticEvent, FormEvent, RefObject } from \"react\";\nimport \"./Input.scss\";\n\ntype Props = {\n  onSubmit?: (term: string) => void;\n  isLoading: boolean;\n  formRef: RefObject<HTMLFormElement>;\n  term: string;\n  onTermChange: (event: SyntheticEvent<HTMLInputElement>) => void;\n};\n\nexport default class extends Component<Props> {\n  onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { term } = this.props;\n    if (term !== \"\" && this.props.onSubmit) {\n      this.props.onSubmit(term);\n    }\n  };\n\n  render() {\n    const iconClass = !this.props.isLoading\n      ? \"fa-search\"\n      : \"fa-spinner spinning\";\n    return (\n      <form\n        className=\"Input-form\"\n        onSubmit={this.onSubmit}\n        ref={this.props.formRef}\n      >\n        <input\n          className=\"Input\"\n          value={this.props.term}\n          onChange={this.props.onTermChange}\n        />\n        <button className=\"submit-button\" type=\"submit\">\n          <i className={\"fas fa-lg \" + iconClass} />\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { SyntheticEvent } from \"react\";\n\ntype ChangeHandler = (event: SyntheticEvent<HTMLSelectElement>) => void;\ntype Props = {\n  onSortPropertyChange: ChangeHandler;\n  onSortOrderChange: ChangeHandler;\n};\n\ntype supportedOrderPropType = {\n  stargazers_count: string;\n  forks_count: string;\n  watchers: string;\n  open_issues: string;\n  [prop: string]: any;\n};\nexport const supportedOrderProp: supportedOrderPropType = {\n  stargazers_count: \"Stars\",\n  forks_count: \"Forks\",\n  watchers: \"Watchers\",\n  open_issues: \"Open issues\"\n};\n\n/**\n * Filter Component\n *\n * @param {object} props React component proppertes\n * @returns {React.Component}\n */\nexport default function(props: Props) {\n  return (\n    <label>\n      Sort by\n      <select onChange={props.onSortPropertyChange}>\n        {Object.keys(supportedOrderProp).map((k, i) => {\n          return (\n            <option key={i} value={k}>\n              {supportedOrderProp[k]}\n            </option>\n          );\n        })}\n      </select>\n      <select onChange={props.onSortOrderChange}>\n        <option value=\"1\">DESC</option>\n        <option value=\"-1\">ASC</option>\n      </select>\n    </label>\n  );\n}\n","import React, { Component, SyntheticEvent, MouseEvent } from \"react\";\nimport { supportedOrderProp } from \"./CompareListFilter\";\nimport \"./Repo.scss\";\n\ntype GitRepoOwner = {\n  html_url: string;\n};\n\nexport type GitRepo = {\n  id: number;\n  node_id: string;\n  name: string;\n  full_name: string;\n  html_url: string;\n  private: boolean;\n  owner: GitRepoOwner;\n  stargazers_count: number;\n  forks_count: number;\n  watchers: number;\n  [prop: string]: any;\n};\n\ntype Props = {\n  repo: GitRepo;\n  context?: string;\n  additionalProperty?: string | null;\n  onRemoveButtonClick?: (event: MouseEvent<HTMLButtonElement>) => any;\n  onClick?: (event: SyntheticEvent<HTMLDivElement>, repo?: GitRepo) => void;\n};\n\ntype States = {};\n\nexport default class Repo extends Component<Props, States> {\n  renderForSearchResulList = () => {\n    return (\n      <div\n        onClick={(e: SyntheticEvent<HTMLDivElement>) => {\n          this.props.onClick && this.props.onClick(e, this.props.repo);\n        }}\n        className=\"Repo\"\n      >\n        {this.props.repo.full_name}\n      </div>\n    );\n  };\n\n  renderForCompareList = () => {\n    const { repo } = this.props;\n\n    let defaultStats = [\"stargazers_count\", \"forks_count\"];\n\n    if (\n      this.props.additionalProperty &&\n      !defaultStats.includes(this.props.additionalProperty)\n    ) {\n      defaultStats.push(this.props.additionalProperty);\n    }\n\n    return (\n      <div\n        className=\"Repo\"\n        onClick={(e: SyntheticEvent<HTMLDivElement>) => {\n          this.props.onClick && this.props.onClick(e);\n        }}\n      >\n        <div className=\"Repo-name\">\n          <a href={repo.html_url} target=\"_blank\">\n            {this.props.repo.full_name}\n          </a>\n        </div>\n        {defaultStats.map((propertyName, index) => (\n          <div className=\"Repo-stats\" key={index}>\n            <span className=\"Repo-stat-name\">\n              {supportedOrderProp[propertyName]}\n            </span>\n            <span className=\"Repo-stat-value\">\n              {repo[propertyName].toLocaleString()}\n            </span>\n          </div>\n        ))}\n        <button\n          className=\"Repo-btn-remove\"\n          onClick={this.props.onRemoveButtonClick}\n        >\n          <i className=\"fas fa-times\" />\n        </button>\n      </div>\n    );\n  };\n\n  render() {\n    if (this.props.context === \"compare\") {\n      return this.renderForCompareList();\n    }\n\n    return this.renderForSearchResulList();\n  }\n}\n","import React, { Component, SyntheticEvent } from \"react\";\nimport Repo, { GitRepo } from \"./Repo\";\n\ntype Props = {\n  repos: Array<GitRepo>;\n  onRepoClick: (event: SyntheticEvent<HTMLDivElement>, repo: GitRepo) => void;\n  nextHandler: () => void;\n  prevHandler: () => void;\n};\nexport default class SearchResultList extends Component<Props> {\n  onRepoClick = (event: SyntheticEvent<HTMLDivElement>, repo: GitRepo) => {\n    return this.props.onRepoClick(event, repo);\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"app-result-list\">\n          {this.props.repos &&\n            this.props.repos.map(repo => (\n              <Repo\n                onClick={event => {\n                  this.onRepoClick(event, repo);\n                }}\n                key={repo.id}\n                repo={repo}\n              />\n            ))}\n        </div>\n        {this.props.repos.length > 0 && (\n          <div className=\"result-navigatio\">\n            <button onClick={this.props.prevHandler}>Prev</button>\n            <button onClick={this.props.nextHandler}>Next</button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","//@flow\nimport React, { Component, SyntheticEvent } from \"react\";\nimport Repo, { GitRepo } from \"./Repo\";\nimport Filter from \"./CompareListFilter\";\n\ntype Props = {\n  repos: Array<GitRepo>;\n  sortBy: string;\n  order: number;\n  additionalProperty?: string;\n  removeRepoCallBack?: (repo: GitRepo) => void;\n  onRemoveButton?: (index: number) => Promise<GitRepo>;\n  onSortPropertyChange: (e: SyntheticEvent<HTMLSelectElement>) => void;\n  onSortOrderChange: (e: SyntheticEvent<HTMLSelectElement>) => void;\n};\n\nexport default class CompareList extends Component<Props> {\n  static defaultProps = {\n    repos: [],\n    sortBy: \"stargazers_count\",\n    order: 1\n  };\n\n  render() {\n    const { sortBy, order, repos } = this.props;\n\n    if (repos.length === 0) {\n      return <div>No selected repository</div>;\n    }\n\n    const sortedRepos = repos.sort((a: GitRepo, b: GitRepo) => {\n      return (b[sortBy] - a[sortBy]) * order;\n    });\n\n    return (\n      <div className=\"compare-list\">\n        <Filter\n          onSortPropertyChange={this.props.onSortPropertyChange}\n          onSortOrderChange={this.props.onSortOrderChange}\n        />\n\n        {sortedRepos.map((repo: GitRepo, index: number) => (\n          <Repo\n            key={repo.id}\n            repo={repo}\n            context=\"compare\"\n            additionalProperty={this.props.additionalProperty}\n            onRemoveButtonClick={() => {\n              this.props.onRemoveButton &&\n                this.props\n                  .onRemoveButton(index)\n                  .then(this.props.removeRepoCallBack);\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import { GitRepo } from \"../components/GitRepo/Repo\";\nimport defaultData from \"../data.json\";\n\ntype ResponseJson = {\n  total_count: number;\n  incomplete_results: boolean;\n  items: Array<GitRepo>;\n  message: string;\n};\n\ninterface IResponseError {\n  httpStatus: number;\n  message: string;\n}\n\nexport class ReponseError extends Error implements IResponseError {\n  httpStatus: number;\n  constructor(message: string, httpStatus: number) {\n    super(message);\n    this.httpStatus = httpStatus;\n  }\n}\n\nexport async function searchRepos(key: string, page = 1, record_per_page = 10) {\n  record_per_page = (record_per_page < 100 && record_per_page) || 100;\n  const apiURL = `https://api.github.com/search/repositories?per_page=${record_per_page}&q=${encodeURIComponent(\n    key\n  )}&page=${page}`;\n\n  const response = await fetch(apiURL, { method: \"GET\" });\n  const responseJson: ResponseJson = await response.json();\n  if (response.ok) {\n    return responseJson.items;\n  }\n\n  throw new ReponseError(responseJson.message, response.status);\n}\n","import React, { Component, SyntheticEvent } from \"react\";\nimport Input from \"./components/Input\";\nimport SearchResultList from \"./components/GitRepo/SearchResultList\";\nimport CompareList from \"./components/GitRepo/CompareList\";\nimport { GitRepo } from \"./components/GitRepo/Repo\";\nimport * as GitHub from \"./services/github\";\n\nimport \"normalize.css\";\nimport \"./App.scss\";\n\ntype States = {\n  isLoading: boolean;\n  searchResult?: Array<GitRepo>;\n  selectedRepos: Array<GitRepo>;\n  sortProperty: string;\n  sortOrder: number;\n  additionalProperty?: string;\n  page: number;\n  term: string;\n  errorMessage: string;\n};\n\nconst searchCache: any = {};\n\nclass App extends Component {\n  state: States = {\n    isLoading: false,\n    sortProperty: \"stargazers_count\",\n    sortOrder: 1,\n    selectedRepos: [],\n    page: 1,\n    term: \"\",\n    errorMessage: \"\"\n  };\n\n  formRef = React.createRef<HTMLFormElement>();\n\n  /**\n   * Search repo using GitHub\n   */\n  searchRepo = (term: string) => {\n    const currentPage = this.state.page;\n    if (!searchCache[term]) {\n      searchCache[term] = {};\n    } else if (searchCache[term][currentPage]) {\n      this.setState({ searchResult: searchCache[term][currentPage] });\n      return;\n    }\n\n    this.setState({ isLoading: true });\n\n    GitHub.searchRepos(term, currentPage)\n      .then(repos => {\n        const page = currentPage.toString();\n        searchCache[term][page] = repos;\n        this.setState({\n          searchResult: searchCache[term][page],\n          errorMessage: \"\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n        if (e instanceof GitHub.ReponseError) {\n          this.setState({ errorMessage: \"GitHub hates you !\" });\n        } else {\n          this.setState({ errorMessage: e.message });\n        }\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  navigationNext = () => {\n    const form = this.formRef.current;\n    if (form && this.state.term !== \"\") {\n      this.setState({ page: 1 + this.state.page }, () => {\n        form.dispatchEvent(new Event(\"submit\"));\n      });\n    }\n  };\n\n  navigationPrev = () => {\n    const form = this.formRef.current;\n    const prevPag = -1 + this.state.page;\n    if (form && this.state.term !== \"\" && prevPag > 0) {\n      this.setState({ page: prevPag }, () => {\n        form.dispatchEvent(new Event(\"submit\"));\n      });\n    }\n  };\n\n  /**\n   * Add repo to compare list\n   */\n  selectRepo = (repo: GitRepo) => {\n    const { selectedRepos } = this.state;\n    if (typeof selectedRepos === \"undefined\" || selectedRepos.length < 1) {\n      this.setState({\n        selectedRepos: [repo]\n      });\n    } else {\n      const repoExists = selectedRepos.filter(\n        (element: GitRepo) => element.id == repo.id\n      );\n      if (repoExists.length === 0) {\n        this.setState({\n          selectedRepos: [...selectedRepos, repo]\n        });\n      }\n    }\n  };\n\n  setSortProperty = (e: SyntheticEvent<HTMLSelectElement>) => {\n    const sortProperty = e.currentTarget.value;\n    let newState = { sortProperty: sortProperty, additionalProperty: \"\" };\n\n    if (!(sortProperty in [\"stargazers_count\", \"forks_count\"])) {\n      newState.additionalProperty = sortProperty;\n    }\n\n    this.setState(newState);\n  };\n\n  setSortOrder = (e: SyntheticEvent<HTMLSelectElement>) => {\n    this.setState({\n      sortOrder: parseInt(e.currentTarget.value)\n    });\n  };\n\n  removeRepoInComapreList = (index: number): Promise<GitRepo> => {\n    const { selectedRepos } = this.state;\n    const removedRepos = selectedRepos.splice(index, 1);\n    this.setState({ selectedRepos });\n    return new Promise(resolve => {\n      resolve(removedRepos[0]);\n    });\n  };\n\n  render() {\n    const appErrorMessage = this.state.errorMessage;\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <div className=\"input-container\">\n            <Input\n              term={this.state.term}\n              onSubmit={this.searchRepo}\n              isLoading={this.state.isLoading}\n              formRef={this.formRef}\n              onTermChange={e => this.setState({ term: e.currentTarget.value })}\n            />\n          </div>\n        </div>\n        {appErrorMessage && <p>{appErrorMessage}</p>}\n        <div className=\"App-content\">\n          <SearchResultList\n            onRepoClick={(event, repo) => {\n              this.selectRepo(repo);\n            }}\n            repos={this.state.searchResult || []}\n            nextHandler={this.navigationNext}\n            prevHandler={this.navigationPrev}\n          />\n          <CompareList\n            repos={this.state.selectedRepos}\n            sortBy={this.state.sortProperty}\n            order={this.state.sortOrder}\n            onSortPropertyChange={this.setSortProperty}\n            onSortOrderChange={this.setSortOrder}\n            additionalProperty={this.state.additionalProperty}\n            onRemoveButton={this.removeRepoInComapreList}\n            removeRepoCallBack={repo => console.log(repo)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}